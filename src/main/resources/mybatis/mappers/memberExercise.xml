<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="memberExercise">

	<!-- 사용자가 선택한 운동의 부위 목록 (중복 x) group by보다 distinct가 가독성 의미 더 맞다 -->
	<select id="selectBodyPartsByUser" parameterType="int" resultType="String">
		<![CDATA[
			select distinct e.body_part as bodyPart
			from exercise e, selected_exercises se
			where e.exercise_id = se.exercise_id
			and se.user_id = #{userId}
			order by field(e.body_part, '가슴', '등', '어깨', '팔', '하체', '복근', '역도', '유산소', '기타')
		]]>
	</select>

	<!-- 모든 운동 부위 리스트 가져오기 (중복x) -->
	<select id="selectAllBodyParts" resultType="String">
		select distinct body_part as bodyPart
		from exercise
		order by field('가슴', '등', '어깨', '팔', '하체', '복근',
		'역도','유산소', '기타')
	</select>


	<!-- 사용자 특정 부위 리스트 가져오기 -->
	<select id="selectListByUserAndPart" parameterType="map" resultType="com.javaex.vo.MemberExerciseVO">
		<![CDATA[
			select  e.exercise_id as exerciseId,
			        e.body_part as bodyPart,
			        e.exercise_name as exerciseName
			from exercise e, selected_exercises se
			where e.exercise_id = se.exercise_id
			and se.user_id = #{userId}
			and e.body_part = #{bodyPart}
			order by e.exercise_name asc
		]]>

	</select>

	<!-- 특정 부위의 모든 운동 리스트 가져오기 -->
	<select id="selectAllByPart" parameterType="map" resultType="com.javaex.vo.MemberExerciseVO">
	    <![CDATA[
			select e.exercise_id as exerciseId,
	               e.body_part as bodyPart,
	               e.exercise_name as exerciseName,
	               e.creator_id as creatorId,
	               e.for_user_id as forUserId
	        from exercise e
	        where e.body_part = #{bodyPart}
	          and (
	                /* 1. 시스템 기본 운동 (누구나 볼 수 있음) */
	                e.creator_id is null
	                
	                /* 2. 또는, 현재 운동 목록을 보고 있는 유저가 '자신을 위해' 직접 생성한 운동 */
	                or (e.creator_id = #{userId} and e.for_user_id is null)
	                
	                /* 3. 또는, 현재 운동 목록을 보고 있는 유저를 '위해서' 생성된 운동 (주로 트레이너가 생성) */
	                or e.for_user_id = #{userId}
	              )
	        /* [수정] CASE 문을 사용하여 정렬 순서를 동적으로 변경합니다. */
        	order by
            /* 1차 정렬: 기본 운동(creator_id IS NULL)을 사용자 추가 운동보다 먼저 오도록 정렬 */
            case when creator_id is null then 0 else 1 end,
            /* 2차 정렬: 기본 운동은 이름(가나다)순으로, 사용자 추가 운동은 추가된 순서(exercise_no)로 정렬 */
            case when creator_id is null then exercise_name else cast(exercise_id as char) end asc

	    ]]>
	</select>

	<!-- #{userId, javaType=int, jdbcType=INTEGER}) => MyBatis에게 userId 파라미터가 자바에서는 int 타입이고, 데이터베이스에서는 INTEGER 타입이라고 정확하게 알려줌 -->

	<!-- 특정 부위에 대한 사용자 운동 선택 기록 삭제 -->
	<delete id="deleteUserExercisesByPart" parameterType="map">
		<![CDATA[
			delete se
			from selected_exercises se
			join exercise e on se.exercise_id = e.exercise_id
			where se.user_id = #{userId}
			  and e.body_part = #{bodyPart}
		]]>
	</delete>

	<!-- 사용자가 선택한 운동을 하나 추가 -->
	<insert id="insertUserExercise" parameterType="map">
		<![CDATA[
			insert into selected_exercises (user_id, exercise_id)
			values (#{userId}, #{exerciseId})
		]]>
	</insert>

	<!-- 새로운 운동 종류를 exercise 테이블에 추가 -->
	<insert id="insertExercise" parameterType="com.javaex.vo.MemberExerciseVO">
		<![CDATA[
			insert into exercise (body_part, exercise_name, creator_id, for_user_id)
			values (#{bodyPart}, #{exerciseName}, #{creatorId}, #{forUserId})
		]]>
		<selectKey keyProperty="exerciseId" resultType="int" order="AFTER">
			select last_insert_id()
		</selectKey>
	</insert>

	<!-- 사용자가 직접 추가한 운동을 삭제 -->
	<delete id="deleteExerciseByIdAndCreator" parameterType="map">
        <![CDATA[
            delete from exercise
            where exercise_id = #{exerciseId}
            and creator_id = #{creatorId}
        ]]>
	</delete>

	<!-- selected_exercises 테이블에서 특정 사용자의 특정 운동 선택 기록 1개를 삭제 -->
	<delete id="deleteUserExerciseSelection" parameterType="map">
		<![CDATA[
			delete from selected_exercises
			where user_id = #{userId}
			  and exercise_id = #{exerciseId}
		]]>
	</delete>
</mapper>