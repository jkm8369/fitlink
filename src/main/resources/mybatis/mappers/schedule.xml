<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- ⚠ namespace 문자열은 자바에서 그대로 사용할 거라 꼭 동일하게! -->
<mapper namespace="trainer.schedule">

	<!--
	  [기능] 특정 트레이너의 특정 날짜(work_date)에 등록된 근무 시간(work_hour) 목록 조회
	  [파라미터]
	    - #{trainerId} : 트레이너 사용자 ID (INT)
	    - #{workDate,jdbcType=DATE} : 근무 날짜 (DATE)
	  [결과]
	    - resultType="int" : work_hour 컬럼 값(정수) 리스트 반환 (오름차순 정렬)
	  [용도 예시]
	    - 근무 시간 설정 UI 표시, 예약 가능 시간대 조회 등
	-->
	<select id="selectHoursByDate" resultType="int">
		SELECT work_hour
		FROM trainer_availability
		WHERE trainer_id = #{trainerId}
		AND work_date =
		#{workDate,jdbcType=DATE}
		ORDER BY work_hour
	</select>


	<!--
	  [기능] 특정 트레이너의 특정 날짜에 등록된 근무 시간 레코드 전체 삭제
	  [파라미터]
	    - #{trainerId} : 트레이너 사용자 ID (INT)
	    - #{workDate,jdbcType=DATE} : 근무 날짜 (DATE)
	  [결과]
	    - MyBatis가 삭제된 행 수(int)를 반환
	  [용도 예시]
	    - 해당 날짜의 근무 시간을 재등록(덮어쓰기)하기 전 초기화할 때 사용
	-->
	<delete id="deleteByDate">
		DELETE FROM trainer_availability
		WHERE trainer_id = #{trainerId}
		AND work_date = #{workDate,jdbcType=DATE}
	</delete>


	<!--
	  [기능] 특정 트레이너의 특정 날짜에 다수의 근무 시간대를 일괄 등록 (Bulk Insert)
	  [파라미터]
	    - #{trainerId} : 트레이너 사용자 ID (INT)
	    - #{workDate,jdbcType=DATE} : 근무 날짜 (DATE)
	    - collection="hours" : 삽입할 시간 목록(List<Integer>), 각 항목은 시(hour, 0~23)
	  [주의]
	    - 중복 (trainer_id, work_date, work_hour) 삽입 시 DB 제약조건이 없으면 중복 레코드가 생길 수 있음
	    - 필요 시 (trainer_id, work_date, work_hour) 유니크 인덱스 권장
	-->
	<insert id="insertHours">
		INSERT INTO trainer_availability (trainer_id, work_date, work_hour)
		VALUES
		<foreach collection="hours" item="h" separator=",">
			(#{trainerId}, #{workDate,jdbcType=DATE}, #{h,jdbcType=TINYINT})
		</foreach>
	</insert>


	<!--
	  [기능] 트레이너의 예약/출석 이력 목록 조회 (스케줄 리스트)
	  [파라미터]
	    - parameterType="int" : 트레이너 사용자 ID를 단일 파라미터로 전달
	      → 쿼리 내 #{value}로 바인딩됨 (파라미터 이름을 지정하지 않았을 때 MyBatis 기본 키워드)
	  [결과]
	    - resultType="com.javaex.vo.ScheduleRowVO"
	      필드 매핑:
	        - no         : reservation_id (예약 번호)
	        - date       : 'YYYY.MM.DD' 형식 문자열 (근무 날짜 + 시간 기준)
	        - time       : 'HH:mm' 형식 문자열
	        - name       : 회원 이름 (users 테이블의 name)
	        - memberId   : 회원 ID
	        - total      : pt_member.total_sessions (회원의 총 이용 세션 수)
	        - used       : 해당 회원의 사용(예약/출석) 세션 수
	                      (reservation.status IN ('BOOKED','ATTENDED') 카운트)
	        - remain     : 남은 세션 수 = GREATEST(total - used, 0)
	  [조인/로직 개요]
	    - reservation r
	    - trainer_availability ta : r.availability_id = ta.avail_id 로 연결
	    - users um : r.member_id = um.user_id 로 회원 이름 조회
	    - pt_member pm : pm.member_id = r.member_id 로 총 세션 수 조회
	    - 상태 필터 : r.status IN ('BOOKED','ATTENDED') 만 리스트에 포함
	    - 정렬 : 최신 근무일/시간 기준 내림차순 (DESC)
	  [포매팅]
	    - DATE_FORMAT + TIMESTAMP(ta.work_date, MAKETIME(ta.work_hour,0,0))로 날짜/시간 문자열 생성
	  [주의]
	    - 동일 회원의 used/remain 계산은 서브쿼리로 매 건마다 수행되므로,
	      대량 데이터 시 성능 이슈 가능 → 필요 시 사전 집계/뷰/조인으로 최적화 고려
	  [참고]
	    - CDATA 내부에는 주석을 넣지 않음 (파싱 오류 방지)
	-->
	
	<select id="selectScheduleRowsForTrainer" parameterType="int" resultType="com.javaex.vo.ScheduleRowVO">
	  <![CDATA[
	    SELECT
	      r.reservation_id AS no,
	      DATE_FORMAT(TIMESTAMP(ta.work_date, MAKETIME(ta.work_hour, 0, 0)), '%Y.%m.%d') AS date,
	      DATE_FORMAT(TIMESTAMP(ta.work_date, MAKETIME(ta.work_hour, 0, 0)), '%H:%i')     AS time,
	      um.name AS name,
	      r.member_id AS memberId,
	      pm.total_sessions AS total,
	      (SELECT COUNT(*) FROM reservation
	         WHERE member_id = r.member_id
	           AND status IN ('BOOKED','ATTENDED')) AS used,
	      GREATEST(pm.total_sessions - (SELECT COUNT(*) FROM reservation
	         WHERE member_id = r.member_id
	           AND status IN ('BOOKED','ATTENDED')), 0) AS remain
	    FROM reservation r
	    JOIN trainer_availability ta ON ta.avail_id = r.availability_id
	    JOIN users um ON um.user_id = r.member_id
	    JOIN pt_member pm ON pm.member_id = r.member_id
	    WHERE ta.trainer_id = #{value}
	      AND r.status IN ('BOOKED','ATTENDED')
	    ORDER BY ta.work_date DESC, ta.work_hour DESC
	  ]]>
	</select>

	
</mapper>
